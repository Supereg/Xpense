# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
version: '3.7'

volumes:
  db_data:
  
services:
  app:
    image: xpense-server:latest
    build:
      context: .
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  migrate:
    image: xpense-server:latest
    build:
      context: .
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    command: ["migrate", "--yes", "--env", "production"]
    deploy:
      replicas: 0
  revert:
    image: xpense-server:latest
    build:
      context: .
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    command: ["migrate", "--revert", "--yes", "--env", "production"]
    deploy:
      replicas: 0
  db:
    image: postgres:15-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: $DATABASE_USERNAME
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 30s
    ports:
      - '5432:5432'
